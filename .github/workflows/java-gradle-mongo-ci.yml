name: CI Workflow
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      application:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.ORG_GITHUB_ADMIN_TOKEN }}
      SPRING_APPLICATION_JSON: ${{secrets.SPRING_APPLICATION_JSON }}
      FABRIC_AXLEHIRE_TOKEN: ${{ secrets.AXLEHIRE_TOKEN }}
      FABRIC_SHIPPO_TEST_TOKEN: ${{ secrets.SHIPPO_TEST_TOKEN }}
      GCR_SECRET: ${{ secrets.ORG_GCR_ADMIN_JSON }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: 5.0
          mongodb-replica-set: test-rs

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build      
        run: gradle build --info

      - name: Build Container Image
        if: contains(github.ref, 'refs/heads/main')
        uses: gradle/gradle-build-action@v2.1.0
        with:
          arguments: bootBuildImage --publishImage --pullPolicy=IF_NOT_PRESENT
      
      - name: Download argocd cli
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Trigger ArgoCD to update Kubernetes deployment
        run: |
          argocd login test.get-fabric.net --grpc-web --grpc-web-root-path argo --username ${{ secrets.ARGOCD_USER }} --password ${{ secrets.ARGOCD_PASSWORD }}
          argocd app set ${{ inputs.application }} -p fabric-chart.podLabels.gitHash=$GITHUB_SHA