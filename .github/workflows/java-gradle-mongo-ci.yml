name: CI Workflow
on:
  workflow_call:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.ORG_GITHUB_ADMIN_TOKEN }}
      SPRING_APPLICATION_JSON: ${{secrets.SPRING_APPLICATION_JSON }}
      FABRIC_AXLEHIRE_TOKEN: ${{ secrets.AXLEHIRE_TOKEN }}
      FABRIC_SHIPPO_TEST_TOKEN: ${{ secrets.SHIPPO_TEST_TOKEN }}
      GCR_SECRET: ${{ secrets.ORG_GCR_ADMIN_JSON }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: 5.0
          mongodb-replica-set: test-rs

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build      
        run: gradle build

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Archive JUnit Results
          path: build/reports/tests/test
          retention-days: 5

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "build/test-results/**/*.xml"

      - name: Build Container Image
        if: contains(github.ref, 'refs/heads/main')
        uses: gradle/gradle-build-action@v2.1.0
        with:
          arguments: bootBuildImage --publishImage --pullPolicy=IF_NOT_PRESENT

      - name: Set application version on environment variable
        if: contains(github.ref, 'refs/heads/main')
        run: echo "GRADLE_SERVICE_VERSION=$(gradle properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: Override GIT sha and container image tag in ArgoCD application
        if: contains(github.ref, 'refs/heads/main')
        uses: get-fabric/shared-github-actions/.github/actions/argocd-parameter-overrides@main
        with:
          server: test.get-fabric.net
          username: ${{ secrets.ORG_ARGOCD_USERNAME }}
          password: ${{ secrets.ORG_ARGOCD_PASSWORD }}
          imageTag: ${{ env.GRADLE_SERVICE_VERSION }}
